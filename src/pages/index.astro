---
// Component Imports
import Layout from "../layouts/Layout.astro";
import ToDos from "../components/ToDos.astro";
---

<Layout title={"To Do List"}>
  <ToDos className={"mt-3"} />
</Layout>

<script>
  import type { ToDo } from "../interfaces/todo.interface";

  import Alpine from "alpinejs";
  import persist from "@alpinejs/persist";
  Alpine.plugin(persist);

  function userDate(date: string) {
    // Make a fuzzy time
		console.log(new Date(date).getTime(), "======" ,new Date().getTime());
    let delta = Math.round((+new Date().getTime() - new Date(date).getTime()) / 1000);
		console.log(delta, "delta");

    let minute = 60,
      hour = minute * 60,
      day = hour * 24,
      week = day * 7;

    let fuzzy;

    if (delta < 30) {
      fuzzy = "just then.";
    } else if (delta < minute) {
      fuzzy = delta + " seconds ago.";
    } else if (delta < 2 * minute) {
      fuzzy = "a minute ago.";
    } else if (delta < hour) {
      fuzzy = Math.floor(delta / minute) + " minutes ago.";
    } else if (Math.floor(delta / hour) == 1) {
      fuzzy = "1 hour ago.";
    } else if (delta < day) {
      fuzzy = Math.floor(delta / hour) + " hours ago.";
    } else if (delta < day * 2) {
      fuzzy = "yesterday";
    }

		return fuzzy;
  }

  Alpine.data("todos", () => ({
		init() {
			this.todos = this.todos.map((t: ToDo) => ({...t, userTime: userDate(t.createdAt)}))
			setInterval(() => {
				this.todos = this.todos.map((t: ToDo) => ({...t, userTime: userDate(t.createdAt)}))
			}, 30000);
		},
    todos: Alpine.$persist([]),
    todoName: "",
    cnt: Alpine.$persist(0),
    addTodo() {
      if (!this.todoName) return;
			const createdAt = new Date();
			console.log(userDate(createdAt));
      this.todos.push({
        isCompleted: false,
        text: this.todoName,
        id: this.cnt,
				createdAt,
				userTime: userDate(createdAt)
      });
      this.todoName = "";
      this.cnt++;
    },
    removeTodo(i: number) {
      this.todos = this.todos.filter((todo: ToDo) => todo.id !== i);
    },
    toggleTodo(i: number) {
      const todo = this.todos.find((t: ToDo) => t.id === i);
      todo.isCompleted = !todo.isCompleted;
    },
  }));

  // document.addEventListener('alpine:init', () => {

  // })
</script>
